{"ast":null,"code":"import _classCallCheck from \"/Users/zhengyunqing/Documents/zhengyunqing/project_zhengyunqing/dragout/drag/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/zhengyunqing/Documents/zhengyunqing/project_zhengyunqing/dragout/drag/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/zhengyunqing/Documents/zhengyunqing/project_zhengyunqing/dragout/drag/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/zhengyunqing/Documents/zhengyunqing/project_zhengyunqing/dragout/drag/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/zhengyunqing/Documents/zhengyunqing/project_zhengyunqing/dragout/drag/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/zhengyunqing/Documents/zhengyunqing/project_zhengyunqing/dragout/drag/src/page/ToolBoxItem/ToolBoxItem.jsx\";\nimport React, { Component } from \"react\";\nimport \"../styles.css\";\nimport \"../example-styles.css\";\nimport { G2, Chart, Geom, Axis, Tooltip, Coord, Label, Legend } from \"bizcharts\";\nimport { Responsive, WidthProvider } from \"react-grid-layout\";\nimport DataSet from \"@antv/data-set\";\nvar ResponsiveReactGridLayout = WidthProvider(Responsive);\n\nvar ShowcaseLayout =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ShowcaseLayout, _Component);\n\n  function ShowcaseLayout() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ShowcaseLayout);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ShowcaseLayout)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      arr: [{\n        key: \"1\"\n      }, {\n        key: \"2\"\n      }],\n      layouts: {\n        lg: []\n      },\n      chartData: [{\n        value: 3,\n        name: 'MPOS'\n      }, {\n        value: 7,\n        name: '传统POS'\n      }, {\n        value: 2,\n        name: '互联网商户'\n      }, {\n        value: 12,\n        name: '创新POS'\n      }]\n    };\n\n    _this.generateLayout = function () {\n      var dragArr = JSON.parse(sessionStorage.getItem('dragArr')) || [];\n      var json = dragArr.map(function (item) {\n        return {\n          // x: Math.ceil(Math.random() * 3),\n          // y: Math.ceil(Math.random() * 2),\n          // w: Math.ceil(Math.random() * 3),\n          // h: Math.ceil(Math.random() * 2),\n          // minH: Math.ceil(Math.random() * 2),\n          // maxH: Math.ceil(Math.random() * 2),\n          // i: item.key.toString(),\n          x: 0,\n          y: 2,\n          w: 6,\n          h: 3,\n          minH: 2,\n          minW: 5,\n          i: item.key.toString()\n        };\n      });\n      var tempJson = {\n        lg: json\n      };\n\n      _this.setState({\n        layouts: tempJson\n      });\n    };\n\n    _this.onDelete = function (item) {\n      // let child = document.getElementById(item);\n      // child.parentNode.removeChild(child);\n      var dragArr = _this.state.arr;\n      dragArr.splice(item, 1);\n\n      _this.setState({\n        arr: dragArr\n      }); // 存储\n\n\n      sessionStorage.setItem('dragArr', JSON.stringify(dragArr));\n    };\n\n    _this.handleAdd = function () {\n      var dragArr = _this.state.arr;\n      var key = Math.ceil(Math.random() * 100);\n      var tempJson = {\n        key: key\n      };\n      dragArr.push(tempJson);\n\n      _this.setState({\n        arr: dragArr\n      }); // 存储\n\n\n      sessionStorage.setItem('dragArr', JSON.stringify(dragArr));\n    };\n\n    _this.onLayoutChange = function (layout, layouts) {\n      console.log(layouts);\n\n      _this.setState({\n        layouts: layouts\n      }); // 存储\n      // sessionStorage.setItem('layouts',JSON.stringify(layouts));\n\n    };\n\n    return _this;\n  }\n\n  _createClass(ShowcaseLayout, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this.generateLayout(); // 执行初始化layouts函数\n      // 取出\n\n      this.setState({\n        arr: JSON.parse(sessionStorage.getItem('dragArr')) || [] // layouts: JSON.parse(sessionStorage.getItem('layouts')) || []\n\n      });\n    } // 初始化layouts\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _ref = this.state || [] || {},\n          arr = _ref.arr,\n          layouts = _ref.layouts;\n\n      var DataView = DataSet.DataView;\n      var data = this.state.chartData || [];\n      var dv = new DataView();\n      dv.source(data).transform({\n        type: \"percent\",\n        field: \"value\",\n        dimension: \"name\",\n        as: \"percent\"\n      });\n      var cols = {\n        percent: {\n          formatter: function formatter(val) {\n            val = (val * 100).toFixed(2) + \"%\";\n            return val;\n          }\n        }\n      };\n      var _this$props = this.props,\n          title = _this$props.title,\n          subTitle = _this$props.subTitle;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: this.handleAdd,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, \"\\u6DFB\\u52A0\"), React.createElement(ResponsiveReactGridLayout, {\n        layouts: layouts,\n        onLayoutChange: this.onLayoutChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, arr.map(function (item, index) {\n        return React.createElement(\"div\", {\n          key: item.key,\n          id: item.key,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 133\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"hide-button\",\n          onClick: _this2.onDelete.bind(_this2, index),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 134\n          },\n          __self: this\n        }, \"\\xD7\"), React.createElement(Chart, {\n          width: 350,\n          height: 220,\n          data: dv,\n          scale: cols,\n          padding: [10, 80, 20, 0],\n          forceFit: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 137\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          style: {\n            fontSize: 14,\n            color: '#108ee9',\n            textAlign: 'left',\n            paddingLeft: 10\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 145\n          },\n          __self: this\n        }, title, React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 146\n          },\n          __self: this\n        }), React.createElement(\"span\", {\n          style: {\n            color: '#ADADAD',\n            fontSize: 10\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 147\n          },\n          __self: this\n        }, subTitle === 'date' ? new Date().toLocaleDateString() : subTitle)), React.createElement(Coord, {\n          type: \"theta\",\n          radius: 0.3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 150\n          },\n          __self: this\n        }), React.createElement(Axis, {\n          name: \"percent\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 151\n          },\n          __self: this\n        }), React.createElement(Legend, {\n          position: \"right-top\",\n          offsetY: 30,\n          offsetX: -10,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 152\n          },\n          __self: this\n        }), React.createElement(Tooltip, {\n          showTitle: false,\n          itemTpl: \"<li><span style=\\\"background-color:{color};\\\" class=\\\"g2-tooltip-marker\\\"></span>{name}: {value}</li>\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 157\n          },\n          __self: this\n        }), React.createElement(Geom, {\n          type: \"intervalStack\",\n          position: \"percent\",\n          color: \"name\",\n          tooltip: [\"name*percent\", function (item, percent) {\n            percent = (percent * 100).toFixed(2) + \"%\";\n            return {\n              name: item,\n              value: percent\n            };\n          }],\n          style: {\n            lineWidth: 1,\n            stroke: \"#fff\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 161\n          },\n          __self: this\n        }, React.createElement(Label, {\n          content: \"percent\",\n          formatter: function formatter(val, item) {\n            return \"\".concat(item.point.name, \" : \").concat(val, \" \");\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 180\n          },\n          __self: this\n        }))));\n      })));\n    }\n  }]);\n\n  return ShowcaseLayout;\n}(Component);\n\nexport { ShowcaseLayout as default };\n\nif (require.main === module) {\n  require(\"../test-hook.jsx\")(module.exports);\n}","map":{"version":3,"sources":["/Users/zhengyunqing/Documents/zhengyunqing/project_zhengyunqing/dragout/drag/src/page/ToolBoxItem/ToolBoxItem.jsx"],"names":["React","Component","G2","Chart","Geom","Axis","Tooltip","Coord","Label","Legend","Responsive","WidthProvider","DataSet","ResponsiveReactGridLayout","ShowcaseLayout","state","arr","key","layouts","lg","chartData","value","name","generateLayout","dragArr","JSON","parse","sessionStorage","getItem","json","map","item","x","y","w","h","minH","minW","i","toString","tempJson","setState","onDelete","splice","setItem","stringify","handleAdd","Math","ceil","random","push","onLayoutChange","layout","console","log","DataView","data","dv","source","transform","type","field","dimension","as","cols","percent","formatter","val","toFixed","props","title","subTitle","index","bind","fontSize","color","textAlign","paddingLeft","Date","toLocaleDateString","lineWidth","stroke","point","require","main","module","exports"],"mappings":"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","sourcesContent":["import React,{Component} from \"react\";\nimport \"../styles.css\";\nimport \"../example-styles.css\";\nimport {\n    G2,\n    Chart,\n    Geom,\n    Axis,\n    Tooltip,\n    Coord,\n    Label,\n    Legend,\n} from \"bizcharts\";\nimport { Responsive, WidthProvider } from \"react-grid-layout\";\nimport DataSet from \"@antv/data-set\";\nconst ResponsiveReactGridLayout = WidthProvider(Responsive);\n\n\nexport default class ShowcaseLayout extends Component {\n    state = {\n        arr:[{\n           key:\"1\",\n        },{\n            key:\"2\",\n        }],\n        layouts: { lg: [] },\n        chartData:[\n            {value: 3, name: 'MPOS'},\n            {value: 7, name: '传统POS'},\n            {value: 2, name: '互联网商户'},\n            {value: 12, name: '创新POS'}\n        ]\n    };\n    componentWillMount() {\n        this.generateLayout(); // 执行初始化layouts函数\n        // 取出\n        this.setState({\n            arr: JSON.parse(sessionStorage.getItem('dragArr')) || [],\n            // layouts: JSON.parse(sessionStorage.getItem('layouts')) || []\n        })      \n    }\n    // 初始化layouts\n    generateLayout = () => {\n        const dragArr = JSON.parse(sessionStorage.getItem('dragArr')) || [];\n        const json = dragArr.map((item) => {\n            return (\n                {\n                    // x: Math.ceil(Math.random() * 3),\n                    // y: Math.ceil(Math.random() * 2),\n                    // w: Math.ceil(Math.random() * 3),\n                    // h: Math.ceil(Math.random() * 2),\n                    // minH: Math.ceil(Math.random() * 2),\n                    // maxH: Math.ceil(Math.random() * 2),\n                    // i: item.key.toString(),\n                    x: 0,\n                    y: 2,\n                    w: 6,\n                    h: 3,\n                    minH: 2,\n                    minW:5,\n                    i: item.key.toString(),\n                }\n            );\n        });\n        const tempJson = {lg: json}\n        this.setState({\n            layouts: tempJson\n        })\n    };\n    /**\n     * 两种方式实现删除操作\n     * 1.对DOM节点进行操作\n     * 2.对已有的数组进行操作*/\n    onDelete = item => {\n        // let child = document.getElementById(item);\n        // child.parentNode.removeChild(child);\n        let dragArr = this.state.arr;\n        dragArr.splice(item,1);\n        this.setState({\n            arr:dragArr\n        })\n        // 存储\n        sessionStorage.setItem('dragArr',JSON.stringify(dragArr));\n    };\n    // 添加操作\n    handleAdd = () => {\n        let dragArr = this.state.arr;\n        let key = Math.ceil(Math.random()*100);\n        let tempJson = {key:key,};\n        dragArr.push(tempJson);\n        this.setState({\n            arr: dragArr\n        })\n        // 存储\n        sessionStorage.setItem('dragArr',JSON.stringify(dragArr));\n    };\n    // 改变大小\n    onLayoutChange = (layout, layouts) => {\n        console.log(layouts);\n        this.setState({layouts})\n        // 存储\n        // sessionStorage.setItem('layouts',JSON.stringify(layouts));\n    };\n    render() {\n        const {arr,layouts} = this.state || [] || {};\n        const { DataView } = DataSet;\n        const data = this.state.chartData || [];\n        const dv = new DataView();\n        dv.source(data).transform({\n            type: \"percent\",\n            field: \"value\",\n            dimension: \"name\",\n            as: \"percent\"\n        });\n        const cols = {\n            percent: {\n                formatter: val => {\n                    val = (val * 100).toFixed(2) + \"%\";\n                    return val;\n                }\n            }\n        };\n        const {title, subTitle} = this.props;\n        return (\n            <div>\n                <button onClick={this.handleAdd}>添加</button>\n                <ResponsiveReactGridLayout\n                    layouts={layouts}\n                    onLayoutChange={this.onLayoutChange}\n                >\n                    {arr.map((item,index)=>{\n                        return (\n                            <div key={item.key} id={item.key}>\n                                <div className=\"hide-button\" onClick={this.onDelete.bind(this, index)}>\n                                    &times;\n                                </div>\n                                <Chart\n                                    width={350}\n                                    height={220}\n                                    data={dv}\n                                    scale={cols}\n                                    padding={[10,80,20,0]}\n                                    forceFit\n                                >\n                                    <p style={{fontSize: 14, color: '#108ee9', textAlign: 'left',paddingLeft:10}}>{title}\n                                        <br/>\n                                        <span\n                                            style={{color: '#ADADAD', fontSize: 10}}>{subTitle === 'date' ? new Date().toLocaleDateString() : subTitle}</span>\n                                    </p>\n                                    <Coord type=\"theta\" radius={0.3} />\n                                    <Axis name=\"percent\" />\n                                    <Legend\n                                        position=\"right-top\"\n                                        offsetY={30}\n                                        offsetX={-10}\n                                    />\n                                    <Tooltip\n                                        showTitle={false}\n                                        itemTpl=\"<li><span style=&quot;background-color:{color};&quot; class=&quot;g2-tooltip-marker&quot;></span>{name}: {value}</li>\"\n                                    />\n                                    <Geom\n                                        type=\"intervalStack\"\n                                        position=\"percent\"\n                                        color=\"name\"\n                                        tooltip={[\n                                            \"name*percent\",\n                                            (item, percent) => {\n                                                percent = (percent * 100).toFixed(2) + \"%\";\n                                                return {\n                                                    name: item,\n                                                    value: percent\n                                                };\n                                            }\n                                        ]}\n                                        style={{\n                                            lineWidth: 1,\n                                            stroke: \"#fff\"\n                                        }}\n                                    >\n                                        <Label\n                                            content=\"percent\"\n                                            formatter={(val, item) => {\n                                                return `${item.point.name} : ${val} `;\n                                            }}\n                                        />\n                                    </Geom>\n                                </Chart>\n                            </div>\n                        );\n                    })}\n                </ResponsiveReactGridLayout>\n            </div>\n        );\n    }\n}\n\nif (require.main === module) {\n    require(\"../test-hook.jsx\")(module.exports);\n}\n"]},"metadata":{},"sourceType":"module"}