{"ast":null,"code":"import _classCallCheck from \"/Users/zhengyunqing/Documents/zhengyunqing/project_zhengyunqing/dragout/drag/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/zhengyunqing/Documents/zhengyunqing/project_zhengyunqing/dragout/drag/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/zhengyunqing/Documents/zhengyunqing/project_zhengyunqing/dragout/drag/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/zhengyunqing/Documents/zhengyunqing/project_zhengyunqing/dragout/drag/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/zhengyunqing/Documents/zhengyunqing/project_zhengyunqing/dragout/drag/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/zhengyunqing/Documents/zhengyunqing/project_zhengyunqing/dragout/drag/src/page/ToolBoxItem/ToolBoxItem.jsx\";\nimport React from \"react\";\nimport _ from \"lodash\";\nimport \"../styles.css\";\nimport \"../example-styles.css\";\nimport { Responsive, WidthProvider } from \"react-grid-layout\";\nvar ResponsiveReactGridLayout = WidthProvider(Responsive);\n\nvar ShowcaseLayout =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ShowcaseLayout, _React$Component);\n\n  function ShowcaseLayout() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ShowcaseLayout);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ShowcaseLayout)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      currentBreakpoint: \"lg\",\n      compactType: \"vertical\",\n      mounted: false // layouts: { lg: this.props.initialLayout },\n      // toolbox: { lg: [] }\n\n    };\n\n    _this.onPutItem = function (item) {\n      console.log(item);\n      var child = document.getElementById(\"1\");\n      child.parentNode.removeChild(child); // this.setState(prevState => {\n      //     return {\n      //         toolbox: {\n      //             ...prevState.toolbox,\n      //             [prevState.currentBreakpoint]: [\n      //                 ...(prevState.toolbox[prevState.currentBreakpoint] || []),\n      //                 item\n      //             ]\n      //         },\n      //         layouts: {\n      //             ...prevState.layouts,\n      //             [prevState.currentBreakpoint]: prevState.layouts[\n      //                 prevState.currentBreakpoint\n      //                 ].filter(({ i }) => i !== item.i)\n      //         }\n      //     };\n      // });\n    };\n\n    _this.onLayoutChange = function (layout, layouts) {\n      _this.props.onLayoutChange(layout, layouts);\n\n      _this.setState({\n        layouts: layouts\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(ShowcaseLayout, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.setState({\n        mounted: true\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        id: \"parent\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, React.createElement(ResponsiveReactGridLayout, Object.assign({}, this.props, {\n        layouts: this.state.layouts,\n        onLayoutChange: this.onLayoutChange // WidthProvider option\n        ,\n        measureBeforeMount: false // I like to have it animate on mount. If you don't, delete `useCSSTransforms` (it's default `true`)\n        // and set `measureBeforeMount={true}`.\n        ,\n        useCSSTransforms: this.state.mounted,\n        compactType: this.state.compactType,\n        preventCollision: !this.state.compactType,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        key: \"1\",\n        id: \"1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"hide-button\",\n        onClick: this.onPutItem.bind(this, 1),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, \"\\xD7\"), \"1\")));\n    }\n  }]);\n\n  return ShowcaseLayout;\n}(React.Component);\n\nShowcaseLayout.defaultProps = {\n  className: \"layout\",\n  rowHeight: 30,\n  onLayoutChange: function onLayoutChange() {},\n  cols: {\n    lg: 12,\n    md: 10,\n    sm: 6,\n    xs: 4,\n    xxs: 2\n  } // initialLayout: generateLayout()\n\n};\nexport { ShowcaseLayout as default };\n\nif (require.main === module) {\n  require(\"../test-hook.jsx\")(module.exports);\n}","map":{"version":3,"sources":["/Users/zhengyunqing/Documents/zhengyunqing/project_zhengyunqing/dragout/drag/src/page/ToolBoxItem/ToolBoxItem.jsx"],"names":["React","_","Responsive","WidthProvider","ResponsiveReactGridLayout","ShowcaseLayout","state","currentBreakpoint","compactType","mounted","onPutItem","item","console","log","child","document","getElementById","parentNode","removeChild","onLayoutChange","layout","layouts","props","setState","bind","Component","defaultProps","className","rowHeight","cols","lg","md","sm","xs","xxs","require","main","module","exports"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,CAAP,MAAc,QAAd;AACA,OAAO,eAAP;AACA,OAAO,uBAAP;AACA,SAASC,UAAT,EAAqBC,aAArB,QAA0C,mBAA1C;AACA,IAAMC,yBAAyB,GAAGD,aAAa,CAACD,UAAD,CAA/C;;IAEqBG,c;;;;;;;;;;;;;;;;;UASjBC,K,GAAQ;AACJC,MAAAA,iBAAiB,EAAE,IADf;AAEJC,MAAAA,WAAW,EAAE,UAFT;AAGJC,MAAAA,OAAO,EAAE,KAHL,CAIJ;AACA;;AALI,K;;UAWRC,S,GAAY,UAAAC,IAAI,EAAI;AAChBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACA,UAAIG,KAAK,GAAGC,QAAQ,CAACC,cAAT,CAAwB,GAAxB,CAAZ;AACAF,MAAAA,KAAK,CAACG,UAAN,CAAiBC,WAAjB,CAA6BJ,KAA7B,EAHgB,CAIhB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACH,K;;UAEDK,c,GAAiB,UAACC,MAAD,EAASC,OAAT,EAAqB;AAClC,YAAKC,KAAL,CAAWH,cAAX,CAA0BC,MAA1B,EAAkCC,OAAlC;;AACA,YAAKE,QAAL,CAAc;AAAEF,QAAAA,OAAO,EAAPA;AAAF,OAAd;AACH,K;;;;;;;wCA7BmB;AAChB,WAAKE,QAAL,CAAc;AAAEd,QAAAA,OAAO,EAAE;AAAX,OAAd;AACH;;;6BA6BQ;AACL,aACI;AAAK,QAAA,EAAE,EAAC,QAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,yBAAD,oBACQ,KAAKa,KADb;AAEI,QAAA,OAAO,EAAE,KAAKhB,KAAL,CAAWe,OAFxB;AAGI,QAAA,cAAc,EAAE,KAAKF,cAHzB,CAII;AAJJ;AAKI,QAAA,kBAAkB,EAAE,KALxB,CAMI;AACA;AAPJ;AAQI,QAAA,gBAAgB,EAAE,KAAKb,KAAL,CAAWG,OARjC;AASI,QAAA,WAAW,EAAE,KAAKH,KAAL,CAAWE,WAT5B;AAUI,QAAA,gBAAgB,EAAE,CAAC,KAAKF,KAAL,CAAWE,WAVlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAaI;AAAK,QAAA,GAAG,EAAC,GAAT;AAAa,QAAA,EAAE,EAAC,GAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,aAAf;AAA6B,QAAA,OAAO,EAAE,KAAKE,SAAL,CAAec,IAAf,CAAoB,IAApB,EAA0B,CAA1B,CAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,MAbJ,CADJ,CADJ;AAuBH;;;;EAxEuCxB,KAAK,CAACyB,S;;AAA7BpB,c,CACVqB,Y,GAAe;AAClBC,EAAAA,SAAS,EAAE,QADO;AAElBC,EAAAA,SAAS,EAAE,EAFO;AAGlBT,EAAAA,cAAc,EAAE,0BAAW,CAAE,CAHX;AAIlBU,EAAAA,IAAI,EAAE;AAAEC,IAAAA,EAAE,EAAE,EAAN;AAAUC,IAAAA,EAAE,EAAE,EAAd;AAAkBC,IAAAA,EAAE,EAAE,CAAtB;AAAyBC,IAAAA,EAAE,EAAE,CAA7B;AAAgCC,IAAAA,GAAG,EAAE;AAArC,GAJY,CAKlB;;AALkB,C;SADL7B,c;;AA2ErB,IAAI8B,OAAO,CAACC,IAAR,KAAiBC,MAArB,EAA6B;AACzBF,EAAAA,OAAO,CAAC,kBAAD,CAAP,CAA4BE,MAAM,CAACC,OAAnC;AACH","sourcesContent":["import React from \"react\";\nimport _ from \"lodash\";\nimport \"../styles.css\";\nimport \"../example-styles.css\";\nimport { Responsive, WidthProvider } from \"react-grid-layout\";\nconst ResponsiveReactGridLayout = WidthProvider(Responsive);\n\nexport default class ShowcaseLayout extends React.Component {\n    static defaultProps = {\n        className: \"layout\",\n        rowHeight: 30,\n        onLayoutChange: function() {},\n        cols: { lg: 12, md: 10, sm: 6, xs: 4, xxs: 2 },\n        // initialLayout: generateLayout()\n    };\n\n    state = {\n        currentBreakpoint: \"lg\",\n        compactType: \"vertical\",\n        mounted: false,\n        // layouts: { lg: this.props.initialLayout },\n        // toolbox: { lg: [] }\n    };\n\n    componentDidMount() {\n        this.setState({ mounted: true });\n    }\n    onPutItem = item => {\n        console.log(item);\n        let child = document.getElementById(\"1\");\n        child.parentNode.removeChild(child);\n        // this.setState(prevState => {\n        //     return {\n        //         toolbox: {\n        //             ...prevState.toolbox,\n        //             [prevState.currentBreakpoint]: [\n        //                 ...(prevState.toolbox[prevState.currentBreakpoint] || []),\n        //                 item\n        //             ]\n        //         },\n        //         layouts: {\n        //             ...prevState.layouts,\n        //             [prevState.currentBreakpoint]: prevState.layouts[\n        //                 prevState.currentBreakpoint\n        //                 ].filter(({ i }) => i !== item.i)\n        //         }\n        //     };\n        // });\n    };\n\n    onLayoutChange = (layout, layouts) => {\n        this.props.onLayoutChange(layout, layouts);\n        this.setState({ layouts });\n    };\n\n    render() {\n        return (\n            <div id=\"parent\">\n                <ResponsiveReactGridLayout\n                    {...this.props}\n                    layouts={this.state.layouts}\n                    onLayoutChange={this.onLayoutChange}\n                    // WidthProvider option\n                    measureBeforeMount={false}\n                    // I like to have it animate on mount. If you don't, delete `useCSSTransforms` (it's default `true`)\n                    // and set `measureBeforeMount={true}`.\n                    useCSSTransforms={this.state.mounted}\n                    compactType={this.state.compactType}\n                    preventCollision={!this.state.compactType}\n                >\n\n                    <div key=\"1\" id=\"1\">\n                        <div className=\"hide-button\" onClick={this.onPutItem.bind(this, 1)}>\n                            &times;\n                        </div>\n                        1</div>\n                </ResponsiveReactGridLayout>\n            </div>\n        );\n    }\n}\n\nif (require.main === module) {\n    require(\"../test-hook.jsx\")(module.exports);\n}\n"]},"metadata":{},"sourceType":"module"}