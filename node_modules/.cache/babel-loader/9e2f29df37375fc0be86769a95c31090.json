{"ast":null,"code":"import _classCallCheck from \"/Users/zhengyunqing/Documents/zhengyunqing/project_zhengyunqing/practice/chart/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/zhengyunqing/Documents/zhengyunqing/project_zhengyunqing/practice/chart/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/zhengyunqing/Documents/zhengyunqing/project_zhengyunqing/practice/chart/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/zhengyunqing/Documents/zhengyunqing/project_zhengyunqing/practice/chart/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/zhengyunqing/Documents/zhengyunqing/project_zhengyunqing/practice/chart/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/zhengyunqing/Documents/zhengyunqing/project_zhengyunqing/practice/chart/src/page/Drag.jsx\";\nimport React from \"react\";\nimport _ from \"lodash\";\nimport RGL, { WidthProvider } from \"react-grid-layout\";\nvar ReactGridLayout = WidthProvider(RGL);\n\nvar Drag =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(Drag, _React$PureComponent);\n\n  function Drag() {\n    _classCallCheck(this, Drag);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Drag).apply(this, arguments));\n  }\n\n  _createClass(Drag, [{\n    key: \"generateDOM\",\n    value: function generateDOM() {\n      // Generate items with properties from the layout, rather than pass the layout directly\n      var layout = this.generateLayout();\n      return _.map(layout, function (l) {\n        var mins = [l.minW, l.minH],\n            maxes = [l.maxW, l.maxH];\n        return React.createElement(\"div\", {\n          key: l.i,\n          \"data-grid\": l,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 24\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          className: \"text\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 25\n          },\n          __self: this\n        }, l.i), React.createElement(\"div\", {\n          className: \"minMax\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 26\n          },\n          __self: this\n        }, \"min:\" + mins + \" - max:\" + maxes));\n      });\n    }\n  }, {\n    key: \"generateLayout\",\n    value: function generateLayout() {\n      var p = this.props;\n      return _.map(new Array(p.items), function (item, i) {\n        var minW = _.random(1, 6),\n            minH = _.random(1, 6);\n\n        var maxW = _.random(minW, 6),\n            maxH = _.random(minH, 6);\n\n        var w = _.random(minW, maxW);\n\n        var y = _.random(minH, maxH);\n\n        return {\n          x: i * 2 % 12,\n          y: Math.floor(i / 6) * y,\n          w: w,\n          h: y,\n          i: i.toString(),\n          minW: minW,\n          maxW: maxW,\n          minH: minH,\n          maxH: maxH\n        };\n      });\n    }\n  }, {\n    key: \"onLayoutChange\",\n    value: function onLayoutChange(layout) {\n      this.props.onLayoutChange(layout);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(ReactGridLayout, Object.assign({\n        onLayoutChange: this.onLayoutChange\n      }, this.props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }), this.generateDOM());\n    }\n  }]);\n\n  return Drag;\n}(React.PureComponent);\n\nDrag.defaultProps = {\n  isDraggable: true,\n  isResizable: true,\n  items: 20,\n  rowHeight: 30,\n  onLayoutChange: function onLayoutChange() {},\n  cols: 12\n};\nmodule.exports = MinMaxLayout;\n\nif (require.main === module) {\n  require(\"../test-hook.jsx\")(module.exports);\n}","map":{"version":3,"sources":["/Users/zhengyunqing/Documents/zhengyunqing/project_zhengyunqing/practice/chart/src/page/Drag.jsx"],"names":["React","_","RGL","WidthProvider","ReactGridLayout","Drag","layout","generateLayout","map","l","mins","minW","minH","maxes","maxW","maxH","i","p","props","Array","items","item","random","w","y","x","Math","floor","h","toString","onLayoutChange","generateDOM","PureComponent","defaultProps","isDraggable","isResizable","rowHeight","cols","module","exports","MinMaxLayout","require","main"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport _ from \"lodash\";\nimport RGL, { WidthProvider } from \"react-grid-layout\";\n\nconst ReactGridLayout = WidthProvider(RGL);\n\nclass Drag extends React.PureComponent {\n  static defaultProps = {\n    isDraggable: true,\n    isResizable: true,\n    items: 20,\n    rowHeight: 30,\n    onLayoutChange: function() {},\n    cols: 12\n  };\n\n  generateDOM() {\n    // Generate items with properties from the layout, rather than pass the layout directly\n    const layout = this.generateLayout();\n    return _.map(layout, function(l) {\n      const mins = [l.minW, l.minH],\n        maxes = [l.maxW, l.maxH];\n      return (\n        <div key={l.i} data-grid={l}>\n          <span className=\"text\">{l.i}</span>\n          <div className=\"minMax\">{\"min:\" + mins + \" - max:\" + maxes}</div>\n        </div>\n      );\n    });\n  }\n\n  generateLayout() {\n    const p = this.props;\n    return _.map(new Array(p.items), function(item, i) {\n      const minW = _.random(1, 6),\n        minH = _.random(1, 6);\n      const maxW = _.random(minW, 6),\n        maxH = _.random(minH, 6);\n      const w = _.random(minW, maxW);\n      const y = _.random(minH, maxH);\n      return {\n        x: (i * 2) % 12,\n        y: Math.floor(i / 6) * y,\n        w,\n        h: y,\n        i: i.toString(),\n        minW,\n        maxW,\n        minH,\n        maxH\n      };\n    });\n  }\n\n  onLayoutChange(layout) {\n    this.props.onLayoutChange(layout);\n  }\n\n  render() {\n    return (\n      <ReactGridLayout onLayoutChange={this.onLayoutChange} {...this.props}>\n        {this.generateDOM()}\n      </ReactGridLayout>\n    );\n  }\n}\n\nmodule.exports = MinMaxLayout;\n\nif (require.main === module) {\n  require(\"../test-hook.jsx\")(module.exports);\n}"]},"metadata":{},"sourceType":"module"}